{"ast":null,"code":"var _jsxFileName = \"/Users/thoeurnratha/Documents/m1/web-development/ecommerce-store/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  // State to store fetched data\n  const [data, setData] = useState(null);\n\n  // Effect to fetch data when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once on mount\n\n  // Function to fetch data\n  const fetchData = async () => {\n    try {\n      // Make a GET request using the Fetch API\n      const response = await fetch('https://fakestoreapi.com/products');\n\n      // Check if the response is successful (status code 200-299)\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Parse the JSON data from the response\n      const result = await response.json();\n\n      // Update the state with the fetched data\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ?\n    // Display the fetched data\n    {} :\n    /*#__PURE__*/\n    // Display a loading message or other UI while data is being fetched\n    _jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyComponent","_s","data","setData","fetchData","response","fetch","ok","Error","result","json","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thoeurnratha/Documents/m1/web-development/ecommerce-store/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\n\nfunction MyComponent() {\n  // State to store fetched data\n  const [data, setData] = useState(null);\n\n  // Effect to fetch data when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once on mount\n\n  // Function to fetch data\n  const fetchData = async () => {\n    try {\n      // Make a GET request using the Fetch API\n      const response = await fetch('https://fakestoreapi.com/products');\n\n      // Check if the response is successful (status code 200-299)\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Parse the JSON data from the response\n      const result = await response.json();\n\n      // Update the state with the fetched data\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n\n  // Render the component\n  return (\n    <div>\n      {data ? (\n        // Display the fetched data\n        {}\n      ) : (\n        // Display a loading message or other UI while data is being fetched\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default MyComponent;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdO,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;;MAEjE;MACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;;MAEA;MACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAEpC;MACAP,OAAO,CAACM,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtD;EACF,CAAC;;EAED;EACA,oBACEd,OAAA;IAAAe,QAAA,EACGZ,IAAI;IACH;IACA,CAAC,CAAC;IAAA;IAEF;IACAH,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CA1CQD,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AA4CpB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}